# 🌀 Figlet Forge - Eidosian Project Configuration
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[build-system]
requires = ["setuptools>=68.0.0", "wheel>=0.40.0"]
build-backend = "setuptools.build_meta"

# 📦 Core Project Identity - The fractal nucleus
[project]
name = "figlet_forge"
version = "0.1.0"
description = "Universal Figlet Management System with Eidosian principles"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Lloyd Handyside", email = "ace1928@gmail.com" }]
maintainers = [{ name = "Neuroforge", email = "lloyd.handyside@neuroforge.io" }]
keywords = [
    "figlet",
    "ascii-art",
    "text",
    "forge",
    "eidosian",
    "typography",
    "cli",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Text Processing :: Fonts",
    "Topic :: Artistic Software",
    "Intended Audience :: Developers",
]

# ✨ Dependencies - Surgical precision, zero bloat
dependencies = [
    "pyfiglet>=0.8.0", # Core ASCII art engine
    "rich>=12.0.0",    # Terminal aesthetics that spark joy
    "typer>=0.7.0",    # CLI framework that doesn't waste your time
]

# 🧩 Optional modules - Perfect symbiosis of components
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",     # Tests that verify truth
    "black>=23.0.0",     # Code formatting that brooks no argument
    "isort>=5.12.0",     # Import sorting that creates harmony
    "mypy>=1.0.0",       # Type checking that prevents chaos
    "ruff>=0.0.256",     # Linting at the speed of thought
    "pre-commit>=3.3.0", # Git hooks that enforce excellence
]
docs = [
    "sphinx>=6.0.0",            # Documentation that illuminates
    "sphinx-rtd-theme>=1.2.0",  # Aesthetics that enhance comprehension
    "myst-parser>=1.0.0",       # Markdown that transcends formats
    "sphinx-copybutton>=0.5.1", # Copy functionality that respects your time
]
ui = [
    "textual>=0.38.1", # TUI framework for the discerning developer
]

# 🔗 Project Connections - The synapses of our ecosystem
[project.urls]
"Homepage" = "https://github.com/neuroforge/figlet_forge"
"Bug Tracker" = "https://github.com/neuroforge/figlet_forge/issues"
"Documentation" = "https://figlet-forge.readthedocs.io/"
"Source Code" = "https://github.com/neuroforge/figlet_forge"
"Changelog" = "https://github.com/neuroforge/figlet_forge/blob/main/CHANGELOG.md"

# 🚀 CLI Entry Point - Zero friction, maximum impact
[project.scripts]
figlet-forge = "figlet_forge.cli:app"

# 🔧 Development Tools - Recursively refined excellence
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
# Life's too short for style debates - black decides

[tool.isort]
profile = "black"
line-length = 88
multi_line_output = 3
# Imports ordered like a well-designed library

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
# Types: because assuming is the mother of all bugs

[tool.ruff]
select = ["E", "F", "B", "I", "N", "UP", "ANN", "S", "A"]
line-length = 88
target-version = "py38"
# Clean code moves at the speed of thought

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "slow: marks tests as slow (select with '-m \"slow\"')",
    "integration: integration tests (select with '-m \"integration\"')",
]
# Tests that verify truth at every scale
